<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kcs.rest.dao.OutBillPresentDao" >
    <select id="findAllOutBillPresent1" resultType="com.kcs.rest.pojo.OutBillPresent" parameterType="java.lang.Integer">
        select top(#{end} -#{begin}+1)* from [OutBill],[ItemsOut],[Goods],[Department],[Category],[Summary]
        where [ItemsOut].OutBillID=[OutBill].OutBillID
        and [ItemsOut].GoodsID=[Goods].GoodsID
        and [ItemsOut].DepartmentID=[Department].DepartmentID
        and	[Goods].CategoryID=[Category].CategoryID
        and [Goods].GoodsID=[Summary].GoodsID
        and (select substring([OutBill].OutTime,0,8)) like [Summary].Time
        <if test="time1 != null and time1 != '' and time2 !=null and time2 != ''">
            and  [OutBill].OutTime between #{time1} and #{time2}
        </if>
        <if test="itemName != null and itemName !='' ">
            and [Goods].ItemsName like '%${itemName}%'
        </if>
        <if test="checkStatus != 3">
            and [OutBill].CheckStatus = #{checkStatus}
        </if>
        <if test="userID != 0">
            and [OutBill].Operator =#{userID}
        </if>
        and ItemsOutID not in(select  oo from (select top(#{begin}-1)  [ItemsOut].ItemsOutID as oo
        from [OutBill],[ItemsOut],[Goods],[Department],[Category],[Summary]
        where [ItemsOut].OutBillID=[OutBill].OutBillID
        and [ItemsOut].GoodsID=[Goods].GoodsID
        and [ItemsOut].DepartmentID=[Department].DepartmentID
        and	[Goods].CategoryID=[Category].CategoryID
        and [Goods].GoodsID=[Summary].GoodsID
        and (select substring([OutBill].OutTime,0,8)) like [Summary].Time
        <if test="time1 != null and time1 != '' and time2 !=null and time2 != ''">
            and  [OutBill].OutTime between #{time1} and #{time2}
        </if>
        <if test="itemName != null and itemName !='' ">
            and [Goods].ItemsName like '%${itemName}%'
        </if>
        <if test="checkStatus != 3">
            and [OutBill].CheckStatus = #{checkStatus}
        </if>
        <if test="userID != 0">
            and [OutBill].Operator =#{userID}
        </if>
        order by [OutBill].OutBillID)as o)
        order by [OutBill].OutTime desc
    </select>
    <select id="findAllOutBillPresent" resultType="com.kcs.rest.pojo.OutBillPresent" parameterType="java.lang.Integer">
        select top (#{end}-#{begin}+1) * from (select Row_Number() over ( order by OutTime Desc ) as id,
        [OutBill].OutBillID as OutBillID,
        [OutBill].OutTime as OutTime,
        [OutBill].CheckStatus as CheckStatus,
        [OutBill].CheckTime as CheckTime,
        [OutBill].CheckMessage as  CheckMessage,
        [OutBill].OperateTime as  OperateTime,
        [OutBill].AllTotal  as AllTotal,
        [OutBill]. StoreManager as StoreManager,
        [OutBill].Taker as Taker,
        [OutBill].Checker as Checker,
        [OutBill].TableMaker as TableMaker,
        [OutBill].Operator as Operator,
        [OutBill].Remark as Remark,
        [ItemsOut].ItemsOutID as ItemsOutID,[ItemsOut].DepartmentID as DepartmentID,
        [Department]. DepartmentName as DepartmentName,
        [ItemsOut].GoodsID as GoodsID,
        [ItemsOut].ItemNum as ItemNum,
        [ItemsOut].ItemPrice as ItemPrice,
        [ItemsOut].ItemTotal as ItemTotal,
        [ItemsOut].Project as Project,
        [ItemsOut].Note as Note,
        [Goods].CategoryID as CategoryID,
        [Goods].ItemsName as ItemsName,
        [Goods].ItemsType as ItemsType,
        [Goods].ItemsUnit as ItemsUnit,
        [Category]. CategoryName as CategoryName,
        [Summary]. SummaryID as SummaryID,
        [Summary].PreAmount as PreAmount,
        [Summary]. PrePrice as PrePrice,
        [Summary].PreTotal as PreTotal,
        [Summary].InAmount as InAmount,
        [Summary].InPrice as InPrice,
        [Summary].InTotal as IntTotal,
        [Summary].OutAmount as OutAmount,
        [Summary].OutPrice as OutPrice,
        [Summary].OutTotal as OutTotal,
        [Summary].ThisAmount as ThisAmount,
        [Summary].ThisPrice as ThisPrice,
        [Summary].ThisTotal as ThisTotal,
        [Summary].Time as Time from [ItemsOut],[OutBill],[Goods],[Category] ,[Department] ,[Summary]
        where (select SUBSTRING ([OutBill].OutTime,0,8)) like [Summary].Time
        and [OutBill].OutBillID = [ItemsOut].OutBillID
        and [ItemsOut].GoodsID = [Goods].GoodsID
        and [Goods].CategoryID = [Category] .CategoryID
        and [ItemsOut] .DepartmentID = [Department] .DepartmentID
        and [Goods].GoodsID=[Summary].GoodsID
        <if test="time1 != null and time1 != '' and time2 !=null and time2 != ''">
            and OutTime between #{time1} and #{time2}
        </if>
        <if test="itemName != null and itemName !='' ">
            and ItemsName like '%${itemName}%'
        </if>
        <if test="checkStatus != 3">
            and CheckStatus = #{checkStatus}
        </if>
        <if test="userID != 0">
            and Operator =#{userID}
        </if>
        )as Present
        where id not in(select top (#{begin}-1)* from ( select Row_Number() over ( order by OutTime Desc ) as id from [ItemsOut],[OutBill],[Goods],[Category] ,[Department] ,[Summary]
        where (select SUBSTRING ([OutBill].OutTime,0,8)) like [Summary].Time
        and [OutBill].OutBillID = [ItemsOut].OutBillID
        and [ItemsOut].GoodsID = [Goods].GoodsID
        and [Goods].CategoryID = [Category] .CategoryID
        and [ItemsOut] .DepartmentID = [Department] .DepartmentID
        and [Goods].GoodsID=[Summary].GoodsID
        <if test="time1 != null and time1 != '' and time2 !=null and time2 != ''">
            and OutTime between #{time1} and #{time2}
        </if>
        <if test="itemName != null and itemName !='' ">
            and ItemsName like '%${itemName}%'
        </if>
        <if test="checkStatus != 3">
            and CheckStatus = #{checkStatus}
        </if>
        <if test="userID != 0">
            and Operator =#{userID}
        </if>)as X)
    </select>
    <select id="outBillPresentCount" resultType="java.lang.Integer">
        select count(*)
        from [OutBill],[ItemsOut],[Goods],[Department],[Category],[Summary]
        where [ItemsOut].OutBillID=[OutBill].OutBillID
        and [ItemsOut].GoodsID=[Goods].GoodsID
        and [ItemsOut].DepartmentID=[Department].DepartmentID
        and	[Goods].CategoryID=[Category].CategoryID
        and [Goods].GoodsID=[Summary].GoodsID
        and (select substring([OutBill].OutTime,0,8)) like [Summary].Time
        <if test="time1 != null and time1 != '' and time2 !=null and time2 != ''">
            and  [OutBill].OutTime between #{time1} and #{time2}
        </if>
        <if test="itemName != null and itemName !='' ">
            and [Goods].ItemsName like '%${itemName}%'
        </if>
        <if test="checkStatus != 3">
            and [OutBill].CheckStatus =#{checkStatus}
        </if>
        <if test="userID != 0">
            and [OutBill].Operator =#{userID}
        </if>
    </select>
    <select id="findOutBillPresentByOutBillID" resultType="com.kcs.rest.pojo.OutBillPresent" parameterType="java.lang.Integer">
        select *
        from [OutBill],[ItemsOut],[Goods],[Department],[Category],[Summary]
        where [OutBill].OutBillID=#{OutBillID}
        and [ItemsOut].OutBillID=#{OutBillID}
        and [ItemsOut].GoodsID=[Goods].GoodsID
        and [ItemsOut].DepartmentID=[Department].DepartmentID
        and	[Goods].CategoryID=[Category].CategoryID
        and [Goods].GoodsID=[Summary].GoodsID
        and (select substring([OutBill].OutTime,0,8)) like [Summary].Time
        order by [OutBill].OutBillID asc
    </select>
    <select id="findAllOutBillPresentPrint" resultType="com.kcs.rest.pojo.OutBillPresent">
        select
        [OutBill].OutBillID ,
        [OutBill].OutTime,
        [OutBill].CheckStatus,
        [OutBill].CheckTime,
        [OutBill].CheckMessage,
        [OutBill].OperateTime,
        [OutBill].AllTotal,
        [OutBill]. StoreManager,
        [OutBill].Taker,
        [OutBill].Checker,
        [OutBill].TableMaker,
        [OutBill].Operator,
        [OutBill].Remark,
        [ItemsOut].ItemsOutID,
        [ItemsOut].DepartmentID,
        [Department]. DepartmentName,
        [ItemsOut].GoodsID,
        [ItemsOut].ItemNum,
        [ItemsOut].ItemPrice,
        [ItemsOut].ItemTotal,
        [ItemsOut].Project,
        [ItemsOut].Note,
        [Goods].CategoryID ,
        [Goods].ItemsName,
        [Goods].ItemsType,
        [Goods].ItemsUnit,
        [Category]. CategoryName,
        [Summary]. SummaryID,
        [Summary].PreAmount,
        [Summary]. PrePrice,
        [Summary].PreTotal,
        [Summary].InAmount,
        [Summary].InPrice,
        [Summary].InTotal,
        [Summary].OutAmount,
        [Summary].OutPrice,
        [Summary].OutTotal,
        [Summary].ThisAmount,
        [Summary].ThisPrice,
        [Summary].ThisTotal,
        [Summary].Time from [ItemsOut],[OutBill],[Goods],[Category] ,[Department] ,[Summary]
        where (select SUBSTRING ([OutBill].OutTime,0,8)) like [Summary].Time
        and [OutBill].OutBillID = [ItemsOut].OutBillID
        and [ItemsOut].GoodsID = [Goods].GoodsID
        and [Goods].CategoryID = [Category] .CategoryID
        and [ItemsOut] .DepartmentID = [Department] .DepartmentID
        and [Goods].GoodsID=[Summary].GoodsID
        order by [OutBill].OutTime desc
    </select>
</mapper>